// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform.proto

#ifndef PROTOBUF_platform_2eproto__INCLUDED
#define PROTOBUF_platform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace platform {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_platform_2eproto();
void protobuf_InitDefaults_platform_2eproto();
void protobuf_AssignDesc_platform_2eproto();
void protobuf_ShutdownFile_platform_2eproto();

class msg_chat_reponse;
class msg_chat_request;
class msg_connected;
class msg_heartbeat;
class msg_login_reponse;
class msg_login_request;
class msg_logout_reponse;
class msg_logout_request;
class msg_userinfo_reponse;
class msg_userinfo_request;

// ===================================================================

class msg_heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_heartbeat) */ {
 public:
  msg_heartbeat();
  virtual ~msg_heartbeat();

  msg_heartbeat(const msg_heartbeat& from);

  inline msg_heartbeat& operator=(const msg_heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_heartbeat& default_instance();

  static const msg_heartbeat* internal_default_instance();

  void Swap(msg_heartbeat* other);

  // implements Message ----------------------------------------------

  inline msg_heartbeat* New() const { return New(NULL); }

  msg_heartbeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_heartbeat& from);
  void MergeFrom(const msg_heartbeat& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_heartbeat* other);
  void UnsafeMergeFrom(const msg_heartbeat& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional string data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:platform.msg_heartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_heartbeat> msg_heartbeat_default_instance_;

// -------------------------------------------------------------------

class msg_connected : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_connected) */ {
 public:
  msg_connected();
  virtual ~msg_connected();

  msg_connected(const msg_connected& from);

  inline msg_connected& operator=(const msg_connected& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_connected& default_instance();

  static const msg_connected* internal_default_instance();

  void Swap(msg_connected* other);

  // implements Message ----------------------------------------------

  inline msg_connected* New() const { return New(NULL); }

  msg_connected* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_connected& from);
  void MergeFrom(const msg_connected& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_connected* other);
  void UnsafeMergeFrom(const msg_connected& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional int64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:platform.msg_connected)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_connected> msg_connected_default_instance_;

// -------------------------------------------------------------------

class msg_login_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_login_request) */ {
 public:
  msg_login_request();
  virtual ~msg_login_request();

  msg_login_request(const msg_login_request& from);

  inline msg_login_request& operator=(const msg_login_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_login_request& default_instance();

  static const msg_login_request* internal_default_instance();

  void Swap(msg_login_request* other);

  // implements Message ----------------------------------------------

  inline msg_login_request* New() const { return New(NULL); }

  msg_login_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_login_request& from);
  void MergeFrom(const msg_login_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_login_request* other);
  void UnsafeMergeFrom(const msg_login_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string userpsd = 3;
  void clear_userpsd();
  static const int kUserpsdFieldNumber = 3;
  const ::std::string& userpsd() const;
  void set_userpsd(const ::std::string& value);
  void set_userpsd(const char* value);
  void set_userpsd(const char* value, size_t size);
  ::std::string* mutable_userpsd();
  ::std::string* release_userpsd();
  void set_allocated_userpsd(::std::string* userpsd);

  // @@protoc_insertion_point(class_scope:platform.msg_login_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr userpsd_;
  ::google::protobuf::int32 device_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_login_request> msg_login_request_default_instance_;

// -------------------------------------------------------------------

class msg_login_reponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_login_reponse) */ {
 public:
  msg_login_reponse();
  virtual ~msg_login_reponse();

  msg_login_reponse(const msg_login_reponse& from);

  inline msg_login_reponse& operator=(const msg_login_reponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_login_reponse& default_instance();

  static const msg_login_reponse* internal_default_instance();

  void Swap(msg_login_reponse* other);

  // implements Message ----------------------------------------------

  inline msg_login_reponse* New() const { return New(NULL); }

  msg_login_reponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_login_reponse& from);
  void MergeFrom(const msg_login_reponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_login_reponse* other);
  void UnsafeMergeFrom(const msg_login_reponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.msg_login_reponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_login_reponse> msg_login_reponse_default_instance_;

// -------------------------------------------------------------------

class msg_logout_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_logout_request) */ {
 public:
  msg_logout_request();
  virtual ~msg_logout_request();

  msg_logout_request(const msg_logout_request& from);

  inline msg_logout_request& operator=(const msg_logout_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_logout_request& default_instance();

  static const msg_logout_request* internal_default_instance();

  void Swap(msg_logout_request* other);

  // implements Message ----------------------------------------------

  inline msg_logout_request* New() const { return New(NULL); }

  msg_logout_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_logout_request& from);
  void MergeFrom(const msg_logout_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_logout_request* other);
  void UnsafeMergeFrom(const msg_logout_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional int32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.msg_logout_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 device_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_logout_request> msg_logout_request_default_instance_;

// -------------------------------------------------------------------

class msg_logout_reponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_logout_reponse) */ {
 public:
  msg_logout_reponse();
  virtual ~msg_logout_reponse();

  msg_logout_reponse(const msg_logout_reponse& from);

  inline msg_logout_reponse& operator=(const msg_logout_reponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_logout_reponse& default_instance();

  static const msg_logout_reponse* internal_default_instance();

  void Swap(msg_logout_reponse* other);

  // implements Message ----------------------------------------------

  inline msg_logout_reponse* New() const { return New(NULL); }

  msg_logout_reponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_logout_reponse& from);
  void MergeFrom(const msg_logout_reponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_logout_reponse* other);
  void UnsafeMergeFrom(const msg_logout_reponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.msg_logout_reponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_logout_reponse> msg_logout_reponse_default_instance_;

// -------------------------------------------------------------------

class msg_chat_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_chat_request) */ {
 public:
  msg_chat_request();
  virtual ~msg_chat_request();

  msg_chat_request(const msg_chat_request& from);

  inline msg_chat_request& operator=(const msg_chat_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_chat_request& default_instance();

  static const msg_chat_request* internal_default_instance();

  void Swap(msg_chat_request* other);

  // implements Message ----------------------------------------------

  inline msg_chat_request* New() const { return New(NULL); }

  msg_chat_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_chat_request& from);
  void MergeFrom(const msg_chat_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_chat_request* other);
  void UnsafeMergeFrom(const msg_chat_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional int32 from_uid = 2;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 2;
  ::google::protobuf::int32 from_uid() const;
  void set_from_uid(::google::protobuf::int32 value);

  // optional int32 to_uid = 3;
  void clear_to_uid();
  static const int kToUidFieldNumber = 3;
  ::google::protobuf::int32 to_uid() const;
  void set_to_uid(::google::protobuf::int32 value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.msg_chat_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 device_;
  ::google::protobuf::int32 from_uid_;
  ::google::protobuf::int32 to_uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_chat_request> msg_chat_request_default_instance_;

// -------------------------------------------------------------------

class msg_chat_reponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_chat_reponse) */ {
 public:
  msg_chat_reponse();
  virtual ~msg_chat_reponse();

  msg_chat_reponse(const msg_chat_reponse& from);

  inline msg_chat_reponse& operator=(const msg_chat_reponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_chat_reponse& default_instance();

  static const msg_chat_reponse* internal_default_instance();

  void Swap(msg_chat_reponse* other);

  // implements Message ----------------------------------------------

  inline msg_chat_reponse* New() const { return New(NULL); }

  msg_chat_reponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_chat_reponse& from);
  void MergeFrom(const msg_chat_reponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_chat_reponse* other);
  void UnsafeMergeFrom(const msg_chat_reponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 from_uid = 1;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 1;
  ::google::protobuf::int32 from_uid() const;
  void set_from_uid(::google::protobuf::int32 value);

  // optional int32 to_uid = 2;
  void clear_to_uid();
  static const int kToUidFieldNumber = 2;
  ::google::protobuf::int32 to_uid() const;
  void set_to_uid(::google::protobuf::int32 value);

  // optional int32 result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.msg_chat_reponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 from_uid_;
  ::google::protobuf::int32 to_uid_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_chat_reponse> msg_chat_reponse_default_instance_;

// -------------------------------------------------------------------

class msg_userinfo_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_userinfo_request) */ {
 public:
  msg_userinfo_request();
  virtual ~msg_userinfo_request();

  msg_userinfo_request(const msg_userinfo_request& from);

  inline msg_userinfo_request& operator=(const msg_userinfo_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_userinfo_request& default_instance();

  static const msg_userinfo_request* internal_default_instance();

  void Swap(msg_userinfo_request* other);

  // implements Message ----------------------------------------------

  inline msg_userinfo_request* New() const { return New(NULL); }

  msg_userinfo_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_userinfo_request& from);
  void MergeFrom(const msg_userinfo_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_userinfo_request* other);
  void UnsafeMergeFrom(const msg_userinfo_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.msg_userinfo_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_userinfo_request> msg_userinfo_request_default_instance_;

// -------------------------------------------------------------------

class msg_userinfo_reponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.msg_userinfo_reponse) */ {
 public:
  msg_userinfo_reponse();
  virtual ~msg_userinfo_reponse();

  msg_userinfo_reponse(const msg_userinfo_reponse& from);

  inline msg_userinfo_reponse& operator=(const msg_userinfo_reponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_userinfo_reponse& default_instance();

  static const msg_userinfo_reponse* internal_default_instance();

  void Swap(msg_userinfo_reponse* other);

  // implements Message ----------------------------------------------

  inline msg_userinfo_reponse* New() const { return New(NULL); }

  msg_userinfo_reponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_userinfo_reponse& from);
  void MergeFrom(const msg_userinfo_reponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(msg_userinfo_reponse* other);
  void UnsafeMergeFrom(const msg_userinfo_reponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 age = 2;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 3;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string address = 5;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string ext = 6;
  void clear_ext();
  static const int kExtFieldNumber = 6;
  const ::std::string& ext() const;
  void set_ext(const ::std::string& value);
  void set_ext(const char* value);
  void set_ext(const char* value, size_t size);
  ::std::string* mutable_ext();
  ::std::string* release_ext();
  void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:platform.msg_userinfo_reponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr ext_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<msg_userinfo_reponse> msg_userinfo_reponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_heartbeat

// optional int64 time = 1;
inline void msg_heartbeat::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 msg_heartbeat::time() const {
  // @@protoc_insertion_point(field_get:platform.msg_heartbeat.time)
  return time_;
}
inline void msg_heartbeat::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_heartbeat.time)
}

// optional string data = 2;
inline void msg_heartbeat::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_heartbeat::data() const {
  // @@protoc_insertion_point(field_get:platform.msg_heartbeat.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_heartbeat::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_heartbeat.data)
}
inline void msg_heartbeat::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_heartbeat.data)
}
inline void msg_heartbeat::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_heartbeat.data)
}
inline ::std::string* msg_heartbeat::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_heartbeat.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_heartbeat::release_data() {
  // @@protoc_insertion_point(field_release:platform.msg_heartbeat.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_heartbeat::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_heartbeat.data)
}

inline const msg_heartbeat* msg_heartbeat::internal_default_instance() {
  return &msg_heartbeat_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_connected

// optional int32 state = 1;
inline void msg_connected::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 msg_connected::state() const {
  // @@protoc_insertion_point(field_get:platform.msg_connected.state)
  return state_;
}
inline void msg_connected::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_connected.state)
}

// optional int64 time = 2;
inline void msg_connected::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 msg_connected::time() const {
  // @@protoc_insertion_point(field_get:platform.msg_connected.time)
  return time_;
}
inline void msg_connected::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_connected.time)
}

inline const msg_connected* msg_connected::internal_default_instance() {
  return &msg_connected_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_login_request

// optional int32 device = 1;
inline void msg_login_request::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 msg_login_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.device)
  return device_;
}
inline void msg_login_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_login_request.device)
}

// optional string username = 2;
inline void msg_login_request::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_login_request::username() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_request::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_request.username)
}
inline void msg_login_request::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_request.username)
}
inline void msg_login_request::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_request.username)
}
inline ::std::string* msg_login_request::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_request.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_login_request::release_username() {
  // @@protoc_insertion_point(field_release:platform.msg_login_request.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_request::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_request.username)
}

// optional string userpsd = 3;
inline void msg_login_request::clear_userpsd() {
  userpsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_login_request::userpsd() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.userpsd)
  return userpsd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_request::set_userpsd(const ::std::string& value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_request.userpsd)
}
inline void msg_login_request::set_userpsd(const char* value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_request.userpsd)
}
inline void msg_login_request::set_userpsd(const char* value, size_t size) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_request.userpsd)
}
inline ::std::string* msg_login_request::mutable_userpsd() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_request.userpsd)
  return userpsd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_login_request::release_userpsd() {
  // @@protoc_insertion_point(field_release:platform.msg_login_request.userpsd)
  
  return userpsd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_request::set_allocated_userpsd(::std::string* userpsd) {
  if (userpsd != NULL) {
    
  } else {
    
  }
  userpsd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userpsd);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_request.userpsd)
}

inline const msg_login_request* msg_login_request::internal_default_instance() {
  return &msg_login_request_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_login_reponse

// optional string msg = 1;
inline void msg_login_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_login_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_reponse.msg)
}
inline void msg_login_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_reponse.msg)
}
inline void msg_login_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_reponse.msg)
}
inline ::std::string* msg_login_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_login_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_login_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_login_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_reponse.msg)
}

inline const msg_login_reponse* msg_login_reponse::internal_default_instance() {
  return &msg_login_reponse_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_logout_request

// optional int32 device = 1;
inline void msg_logout_request::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 msg_logout_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_request.device)
  return device_;
}
inline void msg_logout_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_logout_request.device)
}

// optional int32 uid = 2;
inline void msg_logout_request::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 msg_logout_request::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_request.uid)
  return uid_;
}
inline void msg_logout_request::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_logout_request.uid)
}

inline const msg_logout_request* msg_logout_request::internal_default_instance() {
  return &msg_logout_request_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_logout_reponse

// optional string msg = 1;
inline void msg_logout_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_logout_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_logout_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_logout_reponse.msg)
}
inline void msg_logout_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_logout_reponse.msg)
}
inline void msg_logout_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_logout_reponse.msg)
}
inline ::std::string* msg_logout_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_logout_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_logout_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_logout_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_logout_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_logout_reponse.msg)
}

inline const msg_logout_reponse* msg_logout_reponse::internal_default_instance() {
  return &msg_logout_reponse_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_chat_request

// optional int32 device = 1;
inline void msg_chat_request::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 msg_chat_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.device)
  return device_;
}
inline void msg_chat_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.device)
}

// optional int32 from_uid = 2;
inline void msg_chat_request::clear_from_uid() {
  from_uid_ = 0;
}
inline ::google::protobuf::int32 msg_chat_request::from_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.from_uid)
  return from_uid_;
}
inline void msg_chat_request::set_from_uid(::google::protobuf::int32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.from_uid)
}

// optional int32 to_uid = 3;
inline void msg_chat_request::clear_to_uid() {
  to_uid_ = 0;
}
inline ::google::protobuf::int32 msg_chat_request::to_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.to_uid)
  return to_uid_;
}
inline void msg_chat_request::set_to_uid(::google::protobuf::int32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.to_uid)
}

// optional string msg = 4;
inline void msg_chat_request::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_chat_request::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_chat_request::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.msg)
}
inline void msg_chat_request::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_chat_request.msg)
}
inline void msg_chat_request::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_chat_request.msg)
}
inline ::std::string* msg_chat_request::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_chat_request.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_chat_request::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_chat_request.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_chat_request::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_chat_request.msg)
}

inline const msg_chat_request* msg_chat_request::internal_default_instance() {
  return &msg_chat_request_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_chat_reponse

// optional int32 from_uid = 1;
inline void msg_chat_reponse::clear_from_uid() {
  from_uid_ = 0;
}
inline ::google::protobuf::int32 msg_chat_reponse::from_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.from_uid)
  return from_uid_;
}
inline void msg_chat_reponse::set_from_uid(::google::protobuf::int32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.from_uid)
}

// optional int32 to_uid = 2;
inline void msg_chat_reponse::clear_to_uid() {
  to_uid_ = 0;
}
inline ::google::protobuf::int32 msg_chat_reponse::to_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.to_uid)
  return to_uid_;
}
inline void msg_chat_reponse::set_to_uid(::google::protobuf::int32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.to_uid)
}

// optional int32 result = 3;
inline void msg_chat_reponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 msg_chat_reponse::result() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.result)
  return result_;
}
inline void msg_chat_reponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.result)
}

// optional string msg = 4;
inline void msg_chat_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_chat_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_chat_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.msg)
}
inline void msg_chat_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_chat_reponse.msg)
}
inline void msg_chat_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_chat_reponse.msg)
}
inline ::std::string* msg_chat_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_chat_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_chat_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_chat_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_chat_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_chat_reponse.msg)
}

inline const msg_chat_reponse* msg_chat_reponse::internal_default_instance() {
  return &msg_chat_reponse_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_userinfo_request

// optional int32 uid = 1;
inline void msg_userinfo_request::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 msg_userinfo_request::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_request.uid)
  return uid_;
}
inline void msg_userinfo_request::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_request.uid)
}

inline const msg_userinfo_request* msg_userinfo_request::internal_default_instance() {
  return &msg_userinfo_request_default_instance_.get();
}
// -------------------------------------------------------------------

// msg_userinfo_reponse

// optional int32 uid = 1;
inline void msg_userinfo_reponse::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 msg_userinfo_reponse::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.uid)
  return uid_;
}
inline void msg_userinfo_reponse::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.uid)
}

// optional int32 age = 2;
inline void msg_userinfo_reponse::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 msg_userinfo_reponse::age() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.age)
  return age_;
}
inline void msg_userinfo_reponse::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.age)
}

// optional int32 sex = 3;
inline void msg_userinfo_reponse::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 msg_userinfo_reponse::sex() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.sex)
  return sex_;
}
inline void msg_userinfo_reponse::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.sex)
}

// optional string name = 4;
inline void msg_userinfo_reponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_userinfo_reponse::name() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.name)
}
inline void msg_userinfo_reponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.name)
}
inline void msg_userinfo_reponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.name)
}
inline ::std::string* msg_userinfo_reponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_userinfo_reponse::release_name() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.name)
}

// optional string address = 5;
inline void msg_userinfo_reponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_userinfo_reponse::address() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.address)
}
inline void msg_userinfo_reponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.address)
}
inline void msg_userinfo_reponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.address)
}
inline ::std::string* msg_userinfo_reponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_userinfo_reponse::release_address() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.address)
}

// optional string ext = 6;
inline void msg_userinfo_reponse::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_userinfo_reponse::ext() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.ext)
  return ext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_ext(const ::std::string& value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.ext)
}
inline void msg_userinfo_reponse::set_ext(const char* value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.ext)
}
inline void msg_userinfo_reponse::set_ext(const char* value, size_t size) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.ext)
}
inline ::std::string* msg_userinfo_reponse::mutable_ext() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_userinfo_reponse::release_ext() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.ext)
  
  return ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_userinfo_reponse::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    
  } else {
    
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.ext)
}

inline const msg_userinfo_reponse* msg_userinfo_reponse::internal_default_instance() {
  return &msg_userinfo_reponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace platform

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_platform_2eproto__INCLUDED
