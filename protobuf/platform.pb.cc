// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "platform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace platform {

namespace {

const ::google::protobuf::Descriptor* msg_heartbeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_heartbeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_connected_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_connected_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_login_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_login_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_login_reponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_login_reponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_logout_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_logout_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_logout_reponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_logout_reponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_chat_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_chat_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_chat_reponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_chat_reponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_userinfo_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_userinfo_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_userinfo_reponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_userinfo_reponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_platform_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_platform_2eproto() {
  protobuf_AddDesc_platform_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "platform.proto");
  GOOGLE_CHECK(file != NULL);
  msg_heartbeat_descriptor_ = file->message_type(0);
  static const int msg_heartbeat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_heartbeat, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_heartbeat, data_),
  };
  msg_heartbeat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_heartbeat_descriptor_,
      msg_heartbeat::internal_default_instance(),
      msg_heartbeat_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_heartbeat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_heartbeat, _internal_metadata_));
  msg_connected_descriptor_ = file->message_type(1);
  static const int msg_connected_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_connected, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_connected, time_),
  };
  msg_connected_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_connected_descriptor_,
      msg_connected::internal_default_instance(),
      msg_connected_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_connected),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_connected, _internal_metadata_));
  msg_login_request_descriptor_ = file->message_type(2);
  static const int msg_login_request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_request, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_request, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_request, userpsd_),
  };
  msg_login_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_login_request_descriptor_,
      msg_login_request::internal_default_instance(),
      msg_login_request_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_login_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_request, _internal_metadata_));
  msg_login_reponse_descriptor_ = file->message_type(3);
  static const int msg_login_reponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_reponse, msg_),
  };
  msg_login_reponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_login_reponse_descriptor_,
      msg_login_reponse::internal_default_instance(),
      msg_login_reponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_login_reponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_login_reponse, _internal_metadata_));
  msg_logout_request_descriptor_ = file->message_type(4);
  static const int msg_logout_request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_logout_request, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_logout_request, uid_),
  };
  msg_logout_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_logout_request_descriptor_,
      msg_logout_request::internal_default_instance(),
      msg_logout_request_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_logout_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_logout_request, _internal_metadata_));
  msg_logout_reponse_descriptor_ = file->message_type(5);
  static const int msg_logout_reponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_logout_reponse, msg_),
  };
  msg_logout_reponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_logout_reponse_descriptor_,
      msg_logout_reponse::internal_default_instance(),
      msg_logout_reponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_logout_reponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_logout_reponse, _internal_metadata_));
  msg_chat_request_descriptor_ = file->message_type(6);
  static const int msg_chat_request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_request, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_request, from_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_request, to_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_request, msg_),
  };
  msg_chat_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_chat_request_descriptor_,
      msg_chat_request::internal_default_instance(),
      msg_chat_request_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_chat_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_request, _internal_metadata_));
  msg_chat_reponse_descriptor_ = file->message_type(7);
  static const int msg_chat_reponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_reponse, from_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_reponse, to_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_reponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_reponse, msg_),
  };
  msg_chat_reponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_chat_reponse_descriptor_,
      msg_chat_reponse::internal_default_instance(),
      msg_chat_reponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_chat_reponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_chat_reponse, _internal_metadata_));
  msg_userinfo_request_descriptor_ = file->message_type(8);
  static const int msg_userinfo_request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_request, uid_),
  };
  msg_userinfo_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_userinfo_request_descriptor_,
      msg_userinfo_request::internal_default_instance(),
      msg_userinfo_request_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_userinfo_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_request, _internal_metadata_));
  msg_userinfo_reponse_descriptor_ = file->message_type(9);
  static const int msg_userinfo_reponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, ext_),
  };
  msg_userinfo_reponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      msg_userinfo_reponse_descriptor_,
      msg_userinfo_reponse::internal_default_instance(),
      msg_userinfo_reponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(msg_userinfo_reponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_userinfo_reponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_platform_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_heartbeat_descriptor_, msg_heartbeat::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_connected_descriptor_, msg_connected::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_login_request_descriptor_, msg_login_request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_login_reponse_descriptor_, msg_login_reponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_logout_request_descriptor_, msg_logout_request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_logout_reponse_descriptor_, msg_logout_reponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_chat_request_descriptor_, msg_chat_request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_chat_reponse_descriptor_, msg_chat_reponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_userinfo_request_descriptor_, msg_userinfo_request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      msg_userinfo_reponse_descriptor_, msg_userinfo_reponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_platform_2eproto() {
  msg_heartbeat_default_instance_.Shutdown();
  delete msg_heartbeat_reflection_;
  msg_connected_default_instance_.Shutdown();
  delete msg_connected_reflection_;
  msg_login_request_default_instance_.Shutdown();
  delete msg_login_request_reflection_;
  msg_login_reponse_default_instance_.Shutdown();
  delete msg_login_reponse_reflection_;
  msg_logout_request_default_instance_.Shutdown();
  delete msg_logout_request_reflection_;
  msg_logout_reponse_default_instance_.Shutdown();
  delete msg_logout_reponse_reflection_;
  msg_chat_request_default_instance_.Shutdown();
  delete msg_chat_request_reflection_;
  msg_chat_reponse_default_instance_.Shutdown();
  delete msg_chat_reponse_reflection_;
  msg_userinfo_request_default_instance_.Shutdown();
  delete msg_userinfo_request_reflection_;
  msg_userinfo_reponse_default_instance_.Shutdown();
  delete msg_userinfo_reponse_reflection_;
}

void protobuf_InitDefaults_platform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  msg_heartbeat_default_instance_.DefaultConstruct();
  msg_connected_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_login_request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_login_reponse_default_instance_.DefaultConstruct();
  msg_logout_request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_logout_reponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_chat_request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_chat_reponse_default_instance_.DefaultConstruct();
  msg_userinfo_request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  msg_userinfo_reponse_default_instance_.DefaultConstruct();
  msg_heartbeat_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_connected_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_login_request_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_login_reponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_logout_request_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_logout_reponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_chat_request_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_chat_reponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_userinfo_request_default_instance_.get_mutable()->InitAsDefaultInstance();
  msg_userinfo_reponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_platform_2eproto_once_);
void protobuf_InitDefaults_platform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_platform_2eproto_once_,
                 &protobuf_InitDefaults_platform_2eproto_impl);
}
void protobuf_AddDesc_platform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_platform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016platform.proto\022\010platform\"+\n\rmsg_heartb"
    "eat\022\014\n\004time\030\001 \001(\003\022\014\n\004data\030\002 \001(\t\",\n\rmsg_c"
    "onnected\022\r\n\005state\030\001 \001(\005\022\014\n\004time\030\002 \001(\003\"F\n"
    "\021msg_login_request\022\016\n\006device\030\001 \001(\005\022\020\n\010us"
    "ername\030\002 \001(\t\022\017\n\007userpsd\030\003 \001(\t\" \n\021msg_log"
    "in_reponse\022\013\n\003msg\030\001 \001(\t\"1\n\022msg_logout_re"
    "quest\022\016\n\006device\030\001 \001(\005\022\013\n\003uid\030\002 \001(\005\"!\n\022ms"
    "g_logout_reponse\022\013\n\003msg\030\001 \001(\t\"Q\n\020msg_cha"
    "t_request\022\016\n\006device\030\001 \001(\005\022\020\n\010from_uid\030\002 "
    "\001(\005\022\016\n\006to_uid\030\003 \001(\005\022\013\n\003msg\030\004 \001(\t\"Q\n\020msg_"
    "chat_reponse\022\020\n\010from_uid\030\001 \001(\005\022\016\n\006to_uid"
    "\030\002 \001(\005\022\016\n\006result\030\003 \001(\005\022\013\n\003msg\030\004 \001(\t\"#\n\024m"
    "sg_userinfo_request\022\013\n\003uid\030\001 \001(\005\"i\n\024msg_"
    "userinfo_reponse\022\013\n\003uid\030\001 \001(\005\022\013\n\003age\030\002 \001"
    "(\005\022\013\n\003sex\030\003 \001(\005\022\014\n\004name\030\004 \001(\t\022\017\n\007address"
    "\030\005 \001(\t\022\013\n\003ext\030\006 \001(\tb\006proto3", 627);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "platform.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_platform_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_platform_2eproto_once_);
void protobuf_AddDesc_platform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_platform_2eproto_once_,
                 &protobuf_AddDesc_platform_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_platform_2eproto {
  StaticDescriptorInitializer_platform_2eproto() {
    protobuf_AddDesc_platform_2eproto();
  }
} static_descriptor_initializer_platform_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_heartbeat::kTimeFieldNumber;
const int msg_heartbeat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_heartbeat::msg_heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_heartbeat)
}

void msg_heartbeat::InitAsDefaultInstance() {
}

msg_heartbeat::msg_heartbeat(const msg_heartbeat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_heartbeat)
}

void msg_heartbeat::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

msg_heartbeat::~msg_heartbeat() {
  // @@protoc_insertion_point(destructor:platform.msg_heartbeat)
  SharedDtor();
}

void msg_heartbeat::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_heartbeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_heartbeat_descriptor_;
}

const msg_heartbeat& msg_heartbeat::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_heartbeat> msg_heartbeat_default_instance_;

msg_heartbeat* msg_heartbeat::New(::google::protobuf::Arena* arena) const {
  msg_heartbeat* n = new msg_heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_heartbeat)
  time_ = GOOGLE_LONGLONG(0);
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool msg_heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 time = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_heartbeat.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_heartbeat)
  return false;
#undef DO_
}

void msg_heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_heartbeat)
  // optional int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_heartbeat.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_heartbeat)
}

::google::protobuf::uint8* msg_heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_heartbeat)
  // optional int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_heartbeat.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_heartbeat)
  return target;
}

size_t msg_heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_heartbeat)
  size_t total_size = 0;

  // optional int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_heartbeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_heartbeat)
    UnsafeMergeFrom(*source);
  }
}

void msg_heartbeat::MergeFrom(const msg_heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_heartbeat)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_heartbeat::UnsafeMergeFrom(const msg_heartbeat& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void msg_heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_heartbeat::CopyFrom(const msg_heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_heartbeat)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_heartbeat::IsInitialized() const {

  return true;
}

void msg_heartbeat::Swap(msg_heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_heartbeat::InternalSwap(msg_heartbeat* other) {
  std::swap(time_, other->time_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_heartbeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_heartbeat_descriptor_;
  metadata.reflection = msg_heartbeat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_heartbeat

// optional int64 time = 1;
void msg_heartbeat::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 msg_heartbeat::time() const {
  // @@protoc_insertion_point(field_get:platform.msg_heartbeat.time)
  return time_;
}
void msg_heartbeat::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_heartbeat.time)
}

// optional string data = 2;
void msg_heartbeat::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_heartbeat::data() const {
  // @@protoc_insertion_point(field_get:platform.msg_heartbeat.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_heartbeat::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_heartbeat.data)
}
void msg_heartbeat::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_heartbeat.data)
}
void msg_heartbeat::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_heartbeat.data)
}
::std::string* msg_heartbeat::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_heartbeat.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_heartbeat::release_data() {
  // @@protoc_insertion_point(field_release:platform.msg_heartbeat.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_heartbeat::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_heartbeat.data)
}

inline const msg_heartbeat* msg_heartbeat::internal_default_instance() {
  return &msg_heartbeat_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_connected::kStateFieldNumber;
const int msg_connected::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_connected::msg_connected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_connected)
}

void msg_connected::InitAsDefaultInstance() {
}

msg_connected::msg_connected(const msg_connected& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_connected)
}

void msg_connected::SharedCtor() {
  ::memset(&time_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&time_) + sizeof(state_));
  _cached_size_ = 0;
}

msg_connected::~msg_connected() {
  // @@protoc_insertion_point(destructor:platform.msg_connected)
  SharedDtor();
}

void msg_connected::SharedDtor() {
}

void msg_connected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_connected::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_connected_descriptor_;
}

const msg_connected& msg_connected::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_connected> msg_connected_default_instance_;

msg_connected* msg_connected::New(::google::protobuf::Arena* arena) const {
  msg_connected* n = new msg_connected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_connected::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_connected)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(msg_connected, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<msg_connected*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, state_);

#undef ZR_HELPER_
#undef ZR_

}

bool msg_connected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_connected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_connected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_connected)
  return false;
#undef DO_
}

void msg_connected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_connected)
  // optional int32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_connected)
}

::google::protobuf::uint8* msg_connected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_connected)
  // optional int32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_connected)
  return target;
}

size_t msg_connected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_connected)
  size_t total_size = 0;

  // optional int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_connected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_connected)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_connected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_connected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_connected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_connected)
    UnsafeMergeFrom(*source);
  }
}

void msg_connected::MergeFrom(const msg_connected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_connected)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_connected::UnsafeMergeFrom(const msg_connected& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void msg_connected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_connected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_connected::CopyFrom(const msg_connected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_connected)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_connected::IsInitialized() const {

  return true;
}

void msg_connected::Swap(msg_connected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_connected::InternalSwap(msg_connected* other) {
  std::swap(state_, other->state_);
  std::swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_connected::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_connected_descriptor_;
  metadata.reflection = msg_connected_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_connected

// optional int32 state = 1;
void msg_connected::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 msg_connected::state() const {
  // @@protoc_insertion_point(field_get:platform.msg_connected.state)
  return state_;
}
void msg_connected::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_connected.state)
}

// optional int64 time = 2;
void msg_connected::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 msg_connected::time() const {
  // @@protoc_insertion_point(field_get:platform.msg_connected.time)
  return time_;
}
void msg_connected::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_connected.time)
}

inline const msg_connected* msg_connected::internal_default_instance() {
  return &msg_connected_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_login_request::kDeviceFieldNumber;
const int msg_login_request::kUsernameFieldNumber;
const int msg_login_request::kUserpsdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_login_request::msg_login_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_login_request)
}

void msg_login_request::InitAsDefaultInstance() {
}

msg_login_request::msg_login_request(const msg_login_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_login_request)
}

void msg_login_request::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpsd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_ = 0;
  _cached_size_ = 0;
}

msg_login_request::~msg_login_request() {
  // @@protoc_insertion_point(destructor:platform.msg_login_request)
  SharedDtor();
}

void msg_login_request::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpsd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_login_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_login_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_login_request_descriptor_;
}

const msg_login_request& msg_login_request::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_login_request> msg_login_request_default_instance_;

msg_login_request* msg_login_request::New(::google::protobuf::Arena* arena) const {
  msg_login_request* n = new msg_login_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_login_request::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_login_request)
  device_ = 0;
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool msg_login_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_login_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 device = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // optional string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_login_request.username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userpsd;
        break;
      }

      // optional string userpsd = 3;
      case 3: {
        if (tag == 26) {
         parse_userpsd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userpsd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userpsd().data(), this->userpsd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_login_request.userpsd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_login_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_login_request)
  return false;
#undef DO_
}

void msg_login_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_login_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device(), output);
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_request.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string userpsd = 3;
  if (this->userpsd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userpsd().data(), this->userpsd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_request.userpsd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->userpsd(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_login_request)
}

::google::protobuf::uint8* msg_login_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_login_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device(), target);
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_request.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string userpsd = 3;
  if (this->userpsd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userpsd().data(), this->userpsd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_request.userpsd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->userpsd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_login_request)
  return target;
}

size_t msg_login_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_login_request)
  size_t total_size = 0;

  // optional int32 device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  // optional string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string userpsd = 3;
  if (this->userpsd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userpsd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_login_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_login_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_login_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_login_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_login_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_login_request)
    UnsafeMergeFrom(*source);
  }
}

void msg_login_request::MergeFrom(const msg_login_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_login_request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_login_request::UnsafeMergeFrom(const msg_login_request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.device() != 0) {
    set_device(from.device());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.userpsd().size() > 0) {

    userpsd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userpsd_);
  }
}

void msg_login_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_login_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_login_request::CopyFrom(const msg_login_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_login_request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_login_request::IsInitialized() const {

  return true;
}

void msg_login_request::Swap(msg_login_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_login_request::InternalSwap(msg_login_request* other) {
  std::swap(device_, other->device_);
  username_.Swap(&other->username_);
  userpsd_.Swap(&other->userpsd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_login_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_login_request_descriptor_;
  metadata.reflection = msg_login_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_login_request

// optional int32 device = 1;
void msg_login_request::clear_device() {
  device_ = 0;
}
::google::protobuf::int32 msg_login_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.device)
  return device_;
}
void msg_login_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_login_request.device)
}

// optional string username = 2;
void msg_login_request::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_login_request::username() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_request::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_request.username)
}
void msg_login_request::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_request.username)
}
void msg_login_request::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_request.username)
}
::std::string* msg_login_request::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_request.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_login_request::release_username() {
  // @@protoc_insertion_point(field_release:platform.msg_login_request.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_request::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_request.username)
}

// optional string userpsd = 3;
void msg_login_request::clear_userpsd() {
  userpsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_login_request::userpsd() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_request.userpsd)
  return userpsd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_request::set_userpsd(const ::std::string& value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_request.userpsd)
}
void msg_login_request::set_userpsd(const char* value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_request.userpsd)
}
void msg_login_request::set_userpsd(const char* value, size_t size) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_request.userpsd)
}
::std::string* msg_login_request::mutable_userpsd() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_request.userpsd)
  return userpsd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_login_request::release_userpsd() {
  // @@protoc_insertion_point(field_release:platform.msg_login_request.userpsd)
  
  return userpsd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_request::set_allocated_userpsd(::std::string* userpsd) {
  if (userpsd != NULL) {
    
  } else {
    
  }
  userpsd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userpsd);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_request.userpsd)
}

inline const msg_login_request* msg_login_request::internal_default_instance() {
  return &msg_login_request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_login_reponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_login_reponse::msg_login_reponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_login_reponse)
}

void msg_login_reponse::InitAsDefaultInstance() {
}

msg_login_reponse::msg_login_reponse(const msg_login_reponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_login_reponse)
}

void msg_login_reponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

msg_login_reponse::~msg_login_reponse() {
  // @@protoc_insertion_point(destructor:platform.msg_login_reponse)
  SharedDtor();
}

void msg_login_reponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_login_reponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_login_reponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_login_reponse_descriptor_;
}

const msg_login_reponse& msg_login_reponse::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_login_reponse> msg_login_reponse_default_instance_;

msg_login_reponse* msg_login_reponse::New(::google::protobuf::Arena* arena) const {
  msg_login_reponse* n = new msg_login_reponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_login_reponse::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_login_reponse)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool msg_login_reponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_login_reponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_login_reponse.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_login_reponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_login_reponse)
  return false;
#undef DO_
}

void msg_login_reponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_login_reponse)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_reponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_login_reponse)
}

::google::protobuf::uint8* msg_login_reponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_login_reponse)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_login_reponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_login_reponse)
  return target;
}

size_t msg_login_reponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_login_reponse)
  size_t total_size = 0;

  // optional string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_login_reponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_login_reponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_login_reponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_login_reponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_login_reponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_login_reponse)
    UnsafeMergeFrom(*source);
  }
}

void msg_login_reponse::MergeFrom(const msg_login_reponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_login_reponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_login_reponse::UnsafeMergeFrom(const msg_login_reponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void msg_login_reponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_login_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_login_reponse::CopyFrom(const msg_login_reponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_login_reponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_login_reponse::IsInitialized() const {

  return true;
}

void msg_login_reponse::Swap(msg_login_reponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_login_reponse::InternalSwap(msg_login_reponse* other) {
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_login_reponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_login_reponse_descriptor_;
  metadata.reflection = msg_login_reponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_login_reponse

// optional string msg = 1;
void msg_login_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_login_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_login_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_login_reponse.msg)
}
void msg_login_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_login_reponse.msg)
}
void msg_login_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_login_reponse.msg)
}
::std::string* msg_login_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_login_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_login_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_login_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_login_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_login_reponse.msg)
}

inline const msg_login_reponse* msg_login_reponse::internal_default_instance() {
  return &msg_login_reponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_logout_request::kDeviceFieldNumber;
const int msg_logout_request::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_logout_request::msg_logout_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_logout_request)
}

void msg_logout_request::InitAsDefaultInstance() {
}

msg_logout_request::msg_logout_request(const msg_logout_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_logout_request)
}

void msg_logout_request::SharedCtor() {
  ::memset(&device_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&device_) + sizeof(uid_));
  _cached_size_ = 0;
}

msg_logout_request::~msg_logout_request() {
  // @@protoc_insertion_point(destructor:platform.msg_logout_request)
  SharedDtor();
}

void msg_logout_request::SharedDtor() {
}

void msg_logout_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_logout_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_logout_request_descriptor_;
}

const msg_logout_request& msg_logout_request::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_logout_request> msg_logout_request_default_instance_;

msg_logout_request* msg_logout_request::New(::google::protobuf::Arena* arena) const {
  msg_logout_request* n = new msg_logout_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_logout_request::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_logout_request)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(msg_logout_request, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<msg_logout_request*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(device_, uid_);

#undef ZR_HELPER_
#undef ZR_

}

bool msg_logout_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_logout_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 device = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_logout_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_logout_request)
  return false;
#undef DO_
}

void msg_logout_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_logout_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device(), output);
  }

  // optional int32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_logout_request)
}

::google::protobuf::uint8* msg_logout_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_logout_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device(), target);
  }

  // optional int32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_logout_request)
  return target;
}

size_t msg_logout_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_logout_request)
  size_t total_size = 0;

  // optional int32 device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  // optional int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_logout_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_logout_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_logout_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_logout_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_logout_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_logout_request)
    UnsafeMergeFrom(*source);
  }
}

void msg_logout_request::MergeFrom(const msg_logout_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_logout_request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_logout_request::UnsafeMergeFrom(const msg_logout_request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.device() != 0) {
    set_device(from.device());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void msg_logout_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_logout_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_logout_request::CopyFrom(const msg_logout_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_logout_request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_logout_request::IsInitialized() const {

  return true;
}

void msg_logout_request::Swap(msg_logout_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_logout_request::InternalSwap(msg_logout_request* other) {
  std::swap(device_, other->device_);
  std::swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_logout_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_logout_request_descriptor_;
  metadata.reflection = msg_logout_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_logout_request

// optional int32 device = 1;
void msg_logout_request::clear_device() {
  device_ = 0;
}
::google::protobuf::int32 msg_logout_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_request.device)
  return device_;
}
void msg_logout_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_logout_request.device)
}

// optional int32 uid = 2;
void msg_logout_request::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 msg_logout_request::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_request.uid)
  return uid_;
}
void msg_logout_request::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_logout_request.uid)
}

inline const msg_logout_request* msg_logout_request::internal_default_instance() {
  return &msg_logout_request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_logout_reponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_logout_reponse::msg_logout_reponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_logout_reponse)
}

void msg_logout_reponse::InitAsDefaultInstance() {
}

msg_logout_reponse::msg_logout_reponse(const msg_logout_reponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_logout_reponse)
}

void msg_logout_reponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

msg_logout_reponse::~msg_logout_reponse() {
  // @@protoc_insertion_point(destructor:platform.msg_logout_reponse)
  SharedDtor();
}

void msg_logout_reponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_logout_reponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_logout_reponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_logout_reponse_descriptor_;
}

const msg_logout_reponse& msg_logout_reponse::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_logout_reponse> msg_logout_reponse_default_instance_;

msg_logout_reponse* msg_logout_reponse::New(::google::protobuf::Arena* arena) const {
  msg_logout_reponse* n = new msg_logout_reponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_logout_reponse::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_logout_reponse)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool msg_logout_reponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_logout_reponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_logout_reponse.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_logout_reponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_logout_reponse)
  return false;
#undef DO_
}

void msg_logout_reponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_logout_reponse)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_logout_reponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_logout_reponse)
}

::google::protobuf::uint8* msg_logout_reponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_logout_reponse)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_logout_reponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_logout_reponse)
  return target;
}

size_t msg_logout_reponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_logout_reponse)
  size_t total_size = 0;

  // optional string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_logout_reponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_logout_reponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_logout_reponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_logout_reponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_logout_reponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_logout_reponse)
    UnsafeMergeFrom(*source);
  }
}

void msg_logout_reponse::MergeFrom(const msg_logout_reponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_logout_reponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_logout_reponse::UnsafeMergeFrom(const msg_logout_reponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void msg_logout_reponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_logout_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_logout_reponse::CopyFrom(const msg_logout_reponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_logout_reponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_logout_reponse::IsInitialized() const {

  return true;
}

void msg_logout_reponse::Swap(msg_logout_reponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_logout_reponse::InternalSwap(msg_logout_reponse* other) {
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_logout_reponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_logout_reponse_descriptor_;
  metadata.reflection = msg_logout_reponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_logout_reponse

// optional string msg = 1;
void msg_logout_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_logout_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_logout_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_logout_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_logout_reponse.msg)
}
void msg_logout_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_logout_reponse.msg)
}
void msg_logout_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_logout_reponse.msg)
}
::std::string* msg_logout_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_logout_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_logout_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_logout_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_logout_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_logout_reponse.msg)
}

inline const msg_logout_reponse* msg_logout_reponse::internal_default_instance() {
  return &msg_logout_reponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_chat_request::kDeviceFieldNumber;
const int msg_chat_request::kFromUidFieldNumber;
const int msg_chat_request::kToUidFieldNumber;
const int msg_chat_request::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_chat_request::msg_chat_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_chat_request)
}

void msg_chat_request::InitAsDefaultInstance() {
}

msg_chat_request::msg_chat_request(const msg_chat_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_chat_request)
}

void msg_chat_request::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_, 0, reinterpret_cast<char*>(&to_uid_) -
    reinterpret_cast<char*>(&device_) + sizeof(to_uid_));
  _cached_size_ = 0;
}

msg_chat_request::~msg_chat_request() {
  // @@protoc_insertion_point(destructor:platform.msg_chat_request)
  SharedDtor();
}

void msg_chat_request::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_chat_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_chat_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_chat_request_descriptor_;
}

const msg_chat_request& msg_chat_request::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_chat_request> msg_chat_request_default_instance_;

msg_chat_request* msg_chat_request::New(::google::protobuf::Arena* arena) const {
  msg_chat_request* n = new msg_chat_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_chat_request::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_chat_request)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(msg_chat_request, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<msg_chat_request*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(device_, to_uid_);
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool msg_chat_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_chat_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 device = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_from_uid;
        break;
      }

      // optional int32 from_uid = 2;
      case 2: {
        if (tag == 16) {
         parse_from_uid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_to_uid;
        break;
      }

      // optional int32 to_uid = 3;
      case 3: {
        if (tag == 24) {
         parse_to_uid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        break;
      }

      // optional string msg = 4;
      case 4: {
        if (tag == 34) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_chat_request.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_chat_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_chat_request)
  return false;
#undef DO_
}

void msg_chat_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_chat_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device(), output);
  }

  // optional int32 from_uid = 2;
  if (this->from_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_uid(), output);
  }

  // optional int32 to_uid = 3;
  if (this->to_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->to_uid(), output);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_chat_request.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_chat_request)
}

::google::protobuf::uint8* msg_chat_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_chat_request)
  // optional int32 device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device(), target);
  }

  // optional int32 from_uid = 2;
  if (this->from_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_uid(), target);
  }

  // optional int32 to_uid = 3;
  if (this->to_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->to_uid(), target);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_chat_request.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_chat_request)
  return target;
}

size_t msg_chat_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_chat_request)
  size_t total_size = 0;

  // optional int32 device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  // optional int32 from_uid = 2;
  if (this->from_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_uid());
  }

  // optional int32 to_uid = 3;
  if (this->to_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_uid());
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_chat_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_chat_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_chat_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_chat_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_chat_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_chat_request)
    UnsafeMergeFrom(*source);
  }
}

void msg_chat_request::MergeFrom(const msg_chat_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_chat_request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_chat_request::UnsafeMergeFrom(const msg_chat_request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.device() != 0) {
    set_device(from.device());
  }
  if (from.from_uid() != 0) {
    set_from_uid(from.from_uid());
  }
  if (from.to_uid() != 0) {
    set_to_uid(from.to_uid());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void msg_chat_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_chat_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_chat_request::CopyFrom(const msg_chat_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_chat_request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_chat_request::IsInitialized() const {

  return true;
}

void msg_chat_request::Swap(msg_chat_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_chat_request::InternalSwap(msg_chat_request* other) {
  std::swap(device_, other->device_);
  std::swap(from_uid_, other->from_uid_);
  std::swap(to_uid_, other->to_uid_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_chat_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_chat_request_descriptor_;
  metadata.reflection = msg_chat_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_chat_request

// optional int32 device = 1;
void msg_chat_request::clear_device() {
  device_ = 0;
}
::google::protobuf::int32 msg_chat_request::device() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.device)
  return device_;
}
void msg_chat_request::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.device)
}

// optional int32 from_uid = 2;
void msg_chat_request::clear_from_uid() {
  from_uid_ = 0;
}
::google::protobuf::int32 msg_chat_request::from_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.from_uid)
  return from_uid_;
}
void msg_chat_request::set_from_uid(::google::protobuf::int32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.from_uid)
}

// optional int32 to_uid = 3;
void msg_chat_request::clear_to_uid() {
  to_uid_ = 0;
}
::google::protobuf::int32 msg_chat_request::to_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.to_uid)
  return to_uid_;
}
void msg_chat_request::set_to_uid(::google::protobuf::int32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.to_uid)
}

// optional string msg = 4;
void msg_chat_request::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_chat_request::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_request.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_chat_request::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_chat_request.msg)
}
void msg_chat_request::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_chat_request.msg)
}
void msg_chat_request::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_chat_request.msg)
}
::std::string* msg_chat_request::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_chat_request.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_chat_request::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_chat_request.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_chat_request::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_chat_request.msg)
}

inline const msg_chat_request* msg_chat_request::internal_default_instance() {
  return &msg_chat_request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_chat_reponse::kFromUidFieldNumber;
const int msg_chat_reponse::kToUidFieldNumber;
const int msg_chat_reponse::kResultFieldNumber;
const int msg_chat_reponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_chat_reponse::msg_chat_reponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_chat_reponse)
}

void msg_chat_reponse::InitAsDefaultInstance() {
}

msg_chat_reponse::msg_chat_reponse(const msg_chat_reponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_chat_reponse)
}

void msg_chat_reponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_uid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&from_uid_) + sizeof(result_));
  _cached_size_ = 0;
}

msg_chat_reponse::~msg_chat_reponse() {
  // @@protoc_insertion_point(destructor:platform.msg_chat_reponse)
  SharedDtor();
}

void msg_chat_reponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_chat_reponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_chat_reponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_chat_reponse_descriptor_;
}

const msg_chat_reponse& msg_chat_reponse::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_chat_reponse> msg_chat_reponse_default_instance_;

msg_chat_reponse* msg_chat_reponse::New(::google::protobuf::Arena* arena) const {
  msg_chat_reponse* n = new msg_chat_reponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_chat_reponse::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_chat_reponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(msg_chat_reponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<msg_chat_reponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(from_uid_, result_);
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool msg_chat_reponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_chat_reponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 from_uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to_uid;
        break;
      }

      // optional int32 to_uid = 2;
      case 2: {
        if (tag == 16) {
         parse_to_uid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        break;
      }

      // optional string msg = 4;
      case 4: {
        if (tag == 34) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_chat_reponse.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_chat_reponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_chat_reponse)
  return false;
#undef DO_
}

void msg_chat_reponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_chat_reponse)
  // optional int32 from_uid = 1;
  if (this->from_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->from_uid(), output);
  }

  // optional int32 to_uid = 2;
  if (this->to_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->to_uid(), output);
  }

  // optional int32 result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_chat_reponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_chat_reponse)
}

::google::protobuf::uint8* msg_chat_reponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_chat_reponse)
  // optional int32 from_uid = 1;
  if (this->from_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->from_uid(), target);
  }

  // optional int32 to_uid = 2;
  if (this->to_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->to_uid(), target);
  }

  // optional int32 result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_chat_reponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_chat_reponse)
  return target;
}

size_t msg_chat_reponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_chat_reponse)
  size_t total_size = 0;

  // optional int32 from_uid = 1;
  if (this->from_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_uid());
  }

  // optional int32 to_uid = 2;
  if (this->to_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_uid());
  }

  // optional int32 result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_chat_reponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_chat_reponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_chat_reponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_chat_reponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_chat_reponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_chat_reponse)
    UnsafeMergeFrom(*source);
  }
}

void msg_chat_reponse::MergeFrom(const msg_chat_reponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_chat_reponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_chat_reponse::UnsafeMergeFrom(const msg_chat_reponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.from_uid() != 0) {
    set_from_uid(from.from_uid());
  }
  if (from.to_uid() != 0) {
    set_to_uid(from.to_uid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void msg_chat_reponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_chat_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_chat_reponse::CopyFrom(const msg_chat_reponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_chat_reponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_chat_reponse::IsInitialized() const {

  return true;
}

void msg_chat_reponse::Swap(msg_chat_reponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_chat_reponse::InternalSwap(msg_chat_reponse* other) {
  std::swap(from_uid_, other->from_uid_);
  std::swap(to_uid_, other->to_uid_);
  std::swap(result_, other->result_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_chat_reponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_chat_reponse_descriptor_;
  metadata.reflection = msg_chat_reponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_chat_reponse

// optional int32 from_uid = 1;
void msg_chat_reponse::clear_from_uid() {
  from_uid_ = 0;
}
::google::protobuf::int32 msg_chat_reponse::from_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.from_uid)
  return from_uid_;
}
void msg_chat_reponse::set_from_uid(::google::protobuf::int32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.from_uid)
}

// optional int32 to_uid = 2;
void msg_chat_reponse::clear_to_uid() {
  to_uid_ = 0;
}
::google::protobuf::int32 msg_chat_reponse::to_uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.to_uid)
  return to_uid_;
}
void msg_chat_reponse::set_to_uid(::google::protobuf::int32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.to_uid)
}

// optional int32 result = 3;
void msg_chat_reponse::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 msg_chat_reponse::result() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.result)
  return result_;
}
void msg_chat_reponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.result)
}

// optional string msg = 4;
void msg_chat_reponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_chat_reponse::msg() const {
  // @@protoc_insertion_point(field_get:platform.msg_chat_reponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_chat_reponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_chat_reponse.msg)
}
void msg_chat_reponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_chat_reponse.msg)
}
void msg_chat_reponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_chat_reponse.msg)
}
::std::string* msg_chat_reponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_chat_reponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_chat_reponse::release_msg() {
  // @@protoc_insertion_point(field_release:platform.msg_chat_reponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_chat_reponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_chat_reponse.msg)
}

inline const msg_chat_reponse* msg_chat_reponse::internal_default_instance() {
  return &msg_chat_reponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_userinfo_request::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_userinfo_request::msg_userinfo_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_userinfo_request)
}

void msg_userinfo_request::InitAsDefaultInstance() {
}

msg_userinfo_request::msg_userinfo_request(const msg_userinfo_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_userinfo_request)
}

void msg_userinfo_request::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

msg_userinfo_request::~msg_userinfo_request() {
  // @@protoc_insertion_point(destructor:platform.msg_userinfo_request)
  SharedDtor();
}

void msg_userinfo_request::SharedDtor() {
}

void msg_userinfo_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_userinfo_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_userinfo_request_descriptor_;
}

const msg_userinfo_request& msg_userinfo_request::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_userinfo_request> msg_userinfo_request_default_instance_;

msg_userinfo_request* msg_userinfo_request::New(::google::protobuf::Arena* arena) const {
  msg_userinfo_request* n = new msg_userinfo_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_userinfo_request::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_userinfo_request)
  uid_ = 0;
}

bool msg_userinfo_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_userinfo_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_userinfo_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_userinfo_request)
  return false;
#undef DO_
}

void msg_userinfo_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_userinfo_request)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_userinfo_request)
}

::google::protobuf::uint8* msg_userinfo_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_userinfo_request)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_userinfo_request)
  return target;
}

size_t msg_userinfo_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_userinfo_request)
  size_t total_size = 0;

  // optional int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_userinfo_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_userinfo_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_userinfo_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_userinfo_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_userinfo_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_userinfo_request)
    UnsafeMergeFrom(*source);
  }
}

void msg_userinfo_request::MergeFrom(const msg_userinfo_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_userinfo_request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_userinfo_request::UnsafeMergeFrom(const msg_userinfo_request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void msg_userinfo_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_userinfo_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_userinfo_request::CopyFrom(const msg_userinfo_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_userinfo_request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_userinfo_request::IsInitialized() const {

  return true;
}

void msg_userinfo_request::Swap(msg_userinfo_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_userinfo_request::InternalSwap(msg_userinfo_request* other) {
  std::swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_userinfo_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_userinfo_request_descriptor_;
  metadata.reflection = msg_userinfo_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_userinfo_request

// optional int32 uid = 1;
void msg_userinfo_request::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 msg_userinfo_request::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_request.uid)
  return uid_;
}
void msg_userinfo_request::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_request.uid)
}

inline const msg_userinfo_request* msg_userinfo_request::internal_default_instance() {
  return &msg_userinfo_request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_userinfo_reponse::kUidFieldNumber;
const int msg_userinfo_reponse::kAgeFieldNumber;
const int msg_userinfo_reponse::kSexFieldNumber;
const int msg_userinfo_reponse::kNameFieldNumber;
const int msg_userinfo_reponse::kAddressFieldNumber;
const int msg_userinfo_reponse::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_userinfo_reponse::msg_userinfo_reponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_platform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:platform.msg_userinfo_reponse)
}

void msg_userinfo_reponse::InitAsDefaultInstance() {
}

msg_userinfo_reponse::msg_userinfo_reponse(const msg_userinfo_reponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:platform.msg_userinfo_reponse)
}

void msg_userinfo_reponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&uid_) + sizeof(sex_));
  _cached_size_ = 0;
}

msg_userinfo_reponse::~msg_userinfo_reponse() {
  // @@protoc_insertion_point(destructor:platform.msg_userinfo_reponse)
  SharedDtor();
}

void msg_userinfo_reponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void msg_userinfo_reponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_userinfo_reponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_userinfo_reponse_descriptor_;
}

const msg_userinfo_reponse& msg_userinfo_reponse::default_instance() {
  protobuf_InitDefaults_platform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<msg_userinfo_reponse> msg_userinfo_reponse_default_instance_;

msg_userinfo_reponse* msg_userinfo_reponse::New(::google::protobuf::Arena* arena) const {
  msg_userinfo_reponse* n = new msg_userinfo_reponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_userinfo_reponse::Clear() {
// @@protoc_insertion_point(message_clear_start:platform.msg_userinfo_reponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(msg_userinfo_reponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<msg_userinfo_reponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, sex_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool msg_userinfo_reponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platform.msg_userinfo_reponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_age;
        break;
      }

      // optional int32 age = 2;
      case 2: {
        if (tag == 16) {
         parse_age:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sex;
        break;
      }

      // optional int32 sex = 3;
      case 3: {
        if (tag == 24) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_userinfo_reponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_address;
        break;
      }

      // optional string address = 5;
      case 5: {
        if (tag == 42) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_userinfo_reponse.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ext;
        break;
      }

      // optional string ext = 6;
      case 6: {
        if (tag == 50) {
         parse_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ext().data(), this->ext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platform.msg_userinfo_reponse.ext"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platform.msg_userinfo_reponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platform.msg_userinfo_reponse)
  return false;
#undef DO_
}

void msg_userinfo_reponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platform.msg_userinfo_reponse)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional int32 age = 2;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // optional int32 sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // optional string ext = 6;
  if (this->ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.ext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ext(), output);
  }

  // @@protoc_insertion_point(serialize_end:platform.msg_userinfo_reponse)
}

::google::protobuf::uint8* msg_userinfo_reponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platform.msg_userinfo_reponse)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // optional int32 age = 2;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // optional int32 sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->address(), target);
  }

  // optional string ext = 6;
  if (this->ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platform.msg_userinfo_reponse.ext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:platform.msg_userinfo_reponse)
  return target;
}

size_t msg_userinfo_reponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platform.msg_userinfo_reponse)
  size_t total_size = 0;

  // optional int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional int32 age = 2;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->age());
  }

  // optional int32 sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string ext = 6;
  if (this->ext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ext());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_userinfo_reponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platform.msg_userinfo_reponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const msg_userinfo_reponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_userinfo_reponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platform.msg_userinfo_reponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platform.msg_userinfo_reponse)
    UnsafeMergeFrom(*source);
  }
}

void msg_userinfo_reponse::MergeFrom(const msg_userinfo_reponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platform.msg_userinfo_reponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void msg_userinfo_reponse::UnsafeMergeFrom(const msg_userinfo_reponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.ext().size() > 0) {

    ext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ext_);
  }
}

void msg_userinfo_reponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platform.msg_userinfo_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_userinfo_reponse::CopyFrom(const msg_userinfo_reponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platform.msg_userinfo_reponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool msg_userinfo_reponse::IsInitialized() const {

  return true;
}

void msg_userinfo_reponse::Swap(msg_userinfo_reponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_userinfo_reponse::InternalSwap(msg_userinfo_reponse* other) {
  std::swap(uid_, other->uid_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_userinfo_reponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_userinfo_reponse_descriptor_;
  metadata.reflection = msg_userinfo_reponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msg_userinfo_reponse

// optional int32 uid = 1;
void msg_userinfo_reponse::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 msg_userinfo_reponse::uid() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.uid)
  return uid_;
}
void msg_userinfo_reponse::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.uid)
}

// optional int32 age = 2;
void msg_userinfo_reponse::clear_age() {
  age_ = 0;
}
::google::protobuf::int32 msg_userinfo_reponse::age() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.age)
  return age_;
}
void msg_userinfo_reponse::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.age)
}

// optional int32 sex = 3;
void msg_userinfo_reponse::clear_sex() {
  sex_ = 0;
}
::google::protobuf::int32 msg_userinfo_reponse::sex() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.sex)
  return sex_;
}
void msg_userinfo_reponse::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.sex)
}

// optional string name = 4;
void msg_userinfo_reponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_userinfo_reponse::name() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.name)
}
void msg_userinfo_reponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.name)
}
void msg_userinfo_reponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.name)
}
::std::string* msg_userinfo_reponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_userinfo_reponse::release_name() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.name)
}

// optional string address = 5;
void msg_userinfo_reponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_userinfo_reponse::address() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.address)
}
void msg_userinfo_reponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.address)
}
void msg_userinfo_reponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.address)
}
::std::string* msg_userinfo_reponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_userinfo_reponse::release_address() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.address)
}

// optional string ext = 6;
void msg_userinfo_reponse::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& msg_userinfo_reponse::ext() const {
  // @@protoc_insertion_point(field_get:platform.msg_userinfo_reponse.ext)
  return ext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_ext(const ::std::string& value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.msg_userinfo_reponse.ext)
}
void msg_userinfo_reponse::set_ext(const char* value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.msg_userinfo_reponse.ext)
}
void msg_userinfo_reponse::set_ext(const char* value, size_t size) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.msg_userinfo_reponse.ext)
}
::std::string* msg_userinfo_reponse::mutable_ext() {
  
  // @@protoc_insertion_point(field_mutable:platform.msg_userinfo_reponse.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* msg_userinfo_reponse::release_ext() {
  // @@protoc_insertion_point(field_release:platform.msg_userinfo_reponse.ext)
  
  return ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void msg_userinfo_reponse::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    
  } else {
    
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:platform.msg_userinfo_reponse.ext)
}

inline const msg_userinfo_reponse* msg_userinfo_reponse::internal_default_instance() {
  return &msg_userinfo_reponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace platform

// @@protoc_insertion_point(global_scope)
